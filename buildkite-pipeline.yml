steps:
  - label: ":node: Frontend tests"
    command: |
      cd frontend
      npm ci
      npm test
    plugins:
      - kubernetes:
          podSpec:
            containers:
              - image: node:18
                name: frontend-test
                workingDir: /buildkite/builds

  - label: ":golang: Backend tests"
    command: |
      cd backend
      go mod download
      go test ./...
    plugins:
      - kubernetes:
          podSpec:
            containers:
              - image: golang:1.21
                name: backend-test
                workingDir: /buildkite/builds

  - wait: ~

  - label: ":rocket: Start Backend Service"
    command: |
      cd backend
      go run main.go &
      BACKEND_PID=$!
      echo "Backend started with PID: $BACKEND_PID"
      echo $BACKEND_PID > /tmp/backend.pid
      sleep 5
      curl -f http://localhost:8080/health || exit 1
      echo "Backend health check passed"
    plugins:
      - kubernetes:
          podSpec:
            containers:
              - image: golang:1.21
                name: backend-service
                workingDir: /buildkite/builds

  - label: ":globe_with_meridians: Start Frontend Service"
    command: |
      cd frontend
      export BACKEND_URL=http://localhost:8080
      npm start &
      FRONTEND_PID=$!
      echo "Frontend started with PID: $FRONTEND_PID"
      sleep 5
      curl -f http://localhost:3000/health || exit 1
      echo "Frontend health check passed"
    plugins:
      - kubernetes:
          podSpec:
            containers:
              - image: node:18
                name: frontend-service
                workingDir: /buildkite/builds

  - label: ":test_tube: Full Integration Tests"
    command: |
      # Install Node.js on golang image
      curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
      apt-get install -y nodejs

      # Start backend
      cd backend
      go run main.go &
      BACKEND_PID=$!
      sleep 3

      # Start frontend
      cd ../frontend
      npm ci
      export BACKEND_URL=http://localhost:8081
      npm start &
      FRONTEND_PID=$!
      sleep 5

      # Test API endpoints
      echo "Testing backend API..."
      curl -f -X POST http://localhost:8081/calculate \
        -H "Content-Type: application/json" \
        -d '{"a": 10, "b": 5, "operation": "add"}' || exit 1

      echo "Testing frontend proxy..."
      curl -f -X POST http://localhost:3000/api/calculate \
        -H "Content-Type: application/json" \
        -d '{"a": 15, "b": 3, "operation": "multiply"}' || exit 1

      echo "Testing health endpoints..."
      curl -f http://localhost:8081/health || exit 1
      curl -f http://localhost:3000/health || exit 1
      curl -f http://localhost:3000/api/backend-health || exit 1

      # Cleanup
      kill $BACKEND_PID $FRONTEND_PID
      echo "Integration tests passed!"
    plugins:
      - kubernetes:
          podSpec:
            containers:
              - image: golang:1.21
                name: integration-test
                workingDir: /buildkite/builds

  - label: ":package: Package application"
    command: |
      apt-get update && apt-get install -y zip

      # Create deployment package
      zip -r calculator-app-${BUILDKITE_COMMIT}.zip \
        frontend/ backend/ README.md

      # Create artifact info
      echo "Calculator App Build" > build-info.txt
      echo "Commit: ${BUILDKITE_COMMIT}" >> build-info.txt
      echo "Branch: ${BUILDKITE_BRANCH}" >> build-info.txt
      echo "Build: ${BUILDKITE_BUILD_NUMBER}" >> build-info.txt
      echo "Date: $(date)" >> build-info.txt

      ls -la *.zip *.txt
    plugins:
      - kubernetes:
          podSpec:
            containers:
              - image: ubuntu:22.04
                name: package
                workingDir: /buildkite/builds
